// Code generated by protoc-gen-go.
// source: meshwalker.proto
// DO NOT EDIT!

/*
Package reco is a generated protocol buffer package.

It is generated from these files:
	meshwalker.proto

It has these top-level messages:
	Empty
	InstallAppRequest
	UpdateAppResponse
	DeleteAppRequest
	StatusMsg
	ListAppsResponse
*/
package reco

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InstallAppRequest struct {
	AppNamespace string `protobuf:"bytes,1,opt,name=app_namespace,json=appNamespace" json:"app_namespace,omitempty"`
}

func (m *InstallAppRequest) Reset()                    { *m = InstallAppRequest{} }
func (m *InstallAppRequest) String() string            { return proto.CompactTextString(m) }
func (*InstallAppRequest) ProtoMessage()               {}
func (*InstallAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UpdateAppResponse struct {
	Status      string   `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Msg         string   `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	UpdatedApps []string `protobuf:"bytes,3,rep,name=updated_apps,json=updatedApps" json:"updated_apps,omitempty"`
}

func (m *UpdateAppResponse) Reset()                    { *m = UpdateAppResponse{} }
func (m *UpdateAppResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAppResponse) ProtoMessage()               {}
func (*UpdateAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type DeleteAppRequest struct {
	AppNamespace string `protobuf:"bytes,1,opt,name=app_namespace,json=appNamespace" json:"app_namespace,omitempty"`
}

func (m *DeleteAppRequest) Reset()                    { *m = DeleteAppRequest{} }
func (m *DeleteAppRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppRequest) ProtoMessage()               {}
func (*DeleteAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type StatusMsg struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *StatusMsg) Reset()                    { *m = StatusMsg{} }
func (m *StatusMsg) String() string            { return proto.CompactTextString(m) }
func (*StatusMsg) ProtoMessage()               {}
func (*StatusMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ListAppsResponse struct {
	AppNamespace string `protobuf:"bytes,1,opt,name=app_namespace,json=appNamespace" json:"app_namespace,omitempty"`
	AppName      string `protobuf:"bytes,2,opt,name=app_name,json=appName" json:"app_name,omitempty"`
}

func (m *ListAppsResponse) Reset()                    { *m = ListAppsResponse{} }
func (m *ListAppsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAppsResponse) ProtoMessage()               {}
func (*ListAppsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*Empty)(nil), "reco.Empty")
	proto.RegisterType((*InstallAppRequest)(nil), "reco.InstallAppRequest")
	proto.RegisterType((*UpdateAppResponse)(nil), "reco.UpdateAppResponse")
	proto.RegisterType((*DeleteAppRequest)(nil), "reco.DeleteAppRequest")
	proto.RegisterType((*StatusMsg)(nil), "reco.StatusMsg")
	proto.RegisterType((*ListAppsResponse)(nil), "reco.ListAppsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Reco service

type RecoClient interface {
	Status(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatusMsg, error)
	InstallApp(ctx context.Context, in *InstallAppRequest, opts ...grpc.CallOption) (*StatusMsg, error)
	DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*StatusMsg, error)
	UpdateApps(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UpdateAppResponse, error)
	ListApps(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListAppsResponse, error)
}

type recoClient struct {
	cc *grpc.ClientConn
}

func NewRecoClient(cc *grpc.ClientConn) RecoClient {
	return &recoClient{cc}
}

func (c *recoClient) Status(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := grpc.Invoke(ctx, "/reco.Reco/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recoClient) InstallApp(ctx context.Context, in *InstallAppRequest, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := grpc.Invoke(ctx, "/reco.Reco/InstallApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recoClient) DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := grpc.Invoke(ctx, "/reco.Reco/DeleteApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recoClient) UpdateApps(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UpdateAppResponse, error) {
	out := new(UpdateAppResponse)
	err := grpc.Invoke(ctx, "/reco.Reco/UpdateApps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recoClient) ListApps(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListAppsResponse, error) {
	out := new(ListAppsResponse)
	err := grpc.Invoke(ctx, "/reco.Reco/ListApps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Reco service

type RecoServer interface {
	Status(context.Context, *Empty) (*StatusMsg, error)
	InstallApp(context.Context, *InstallAppRequest) (*StatusMsg, error)
	DeleteApp(context.Context, *DeleteAppRequest) (*StatusMsg, error)
	UpdateApps(context.Context, *Empty) (*UpdateAppResponse, error)
	ListApps(context.Context, *Empty) (*ListAppsResponse, error)
}

func RegisterRecoServer(s *grpc.Server, srv RecoServer) {
	s.RegisterService(&_Reco_serviceDesc, srv)
}

func _Reco_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reco.Reco/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoServer).Status(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reco_InstallApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoServer).InstallApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reco.Reco/InstallApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoServer).InstallApp(ctx, req.(*InstallAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reco_DeleteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoServer).DeleteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reco.Reco/DeleteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoServer).DeleteApp(ctx, req.(*DeleteAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reco_UpdateApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoServer).UpdateApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reco.Reco/UpdateApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoServer).UpdateApps(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reco_ListApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoServer).ListApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reco.Reco/ListApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoServer).ListApps(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reco_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reco.Reco",
	HandlerType: (*RecoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Reco_Status_Handler,
		},
		{
			MethodName: "InstallApp",
			Handler:    _Reco_InstallApp_Handler,
		},
		{
			MethodName: "DeleteApp",
			Handler:    _Reco_DeleteApp_Handler,
		},
		{
			MethodName: "UpdateApps",
			Handler:    _Reco_UpdateApps_Handler,
		},
		{
			MethodName: "ListApps",
			Handler:    _Reco_ListApps_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meshwalker.proto",
}

func init() { proto.RegisterFile("meshwalker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0xe5, 0x4b, 0xa0, 0x03, 0xc6, 0xb2, 0x07, 0xac, 0x9e, 0x70, 0xbd, 0x70, 0x6a, 0xe2, 0x37,
	0x57, 0x88, 0x1e, 0x4c, 0xd4, 0x98, 0x1a, 0xcf, 0xb8, 0x96, 0x09, 0x1a, 0x5b, 0x3a, 0x76, 0x96,
	0x18, 0x7f, 0x83, 0x7f, 0xda, 0xb0, 0x5d, 0xaa, 0x16, 0x0e, 0x78, 0xeb, 0x7c, 0xbc, 0xbe, 0xb7,
	0xef, 0x0d, 0xb8, 0x31, 0xf2, 0xcb, 0x87, 0x8a, 0xde, 0x30, 0xf5, 0x29, 0x4d, 0x74, 0x22, 0x6a,
	0x29, 0x86, 0x89, 0x6c, 0xc0, 0xd6, 0x55, 0x4c, 0xfa, 0x53, 0x0e, 0xa0, 0x73, 0x3d, 0x63, 0xad,
	0xa2, 0x68, 0x48, 0x14, 0xe0, 0xfb, 0x1c, 0x59, 0x8b, 0x43, 0xd8, 0x56, 0x44, 0xe3, 0x99, 0x8a,
	0x91, 0x49, 0x85, 0xe8, 0x95, 0x7b, 0xe5, 0xbe, 0x13, 0xb4, 0x15, 0xd1, 0xdd, 0xb2, 0x27, 0x9f,
	0xa0, 0xf3, 0x48, 0x13, 0xa5, 0xd1, 0x00, 0x99, 0x92, 0x19, 0xa3, 0xe8, 0x42, 0x9d, 0xb5, 0xd2,
	0x73, 0xb6, 0x10, 0x5b, 0x09, 0x17, 0xaa, 0x31, 0x4f, 0xbd, 0x8a, 0x69, 0x2e, 0x3e, 0xc5, 0x01,
	0xb4, 0xe7, 0x06, 0x3e, 0x19, 0x2b, 0x22, 0xf6, 0xaa, 0xbd, 0x6a, 0xdf, 0x09, 0x5a, 0xb6, 0x37,
	0x24, 0x62, 0x79, 0x01, 0xee, 0x25, 0x46, 0x68, 0x19, 0xfe, 0x21, 0xed, 0x0c, 0x9c, 0x07, 0xc3,
	0x7b, 0xcb, 0xd3, 0xcd, 0x25, 0xc9, 0x00, 0xdc, 0x9b, 0x57, 0xd6, 0x0b, 0xee, 0xfc, 0x41, 0x9b,
	0xf0, 0x89, 0x3d, 0x68, 0x2e, 0x97, 0xec, 0xff, 0x1a, 0x76, 0x7e, 0xfc, 0x55, 0x81, 0x5a, 0x80,
	0x61, 0x22, 0xfa, 0x50, 0xcf, 0x34, 0x89, 0x96, 0xbf, 0x88, 0xc0, 0x37, 0xfe, 0xef, 0xef, 0x64,
	0x45, 0x2e, 0x57, 0x96, 0xc4, 0x00, 0xe0, 0x27, 0x12, 0xb1, 0x9b, 0x2d, 0xac, 0x84, 0xb4, 0x0e,
	0x79, 0x0e, 0x4e, 0x6e, 0x98, 0xe8, 0x66, 0xf3, 0xa2, 0x83, 0xeb, 0x70, 0xa7, 0x00, 0x79, 0x94,
	0x05, 0x7d, 0x96, 0x7e, 0x25, 0x69, 0x59, 0x12, 0x47, 0xd0, 0x5c, 0xda, 0xf5, 0x17, 0x63, 0x99,
	0x8b, 0x5e, 0xca, 0xd2, 0x48, 0x82, 0x17, 0x26, 0xb1, 0xff, 0xeb, 0x28, 0xa7, 0x29, 0x85, 0x66,
	0x7d, 0x64, 0x0e, 0xf3, 0xbe, 0xfc, 0x5c, 0x37, 0x77, 0x7a, 0xf2, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x93, 0x91, 0xef, 0xac, 0xbb, 0x02, 0x00, 0x00,
}
