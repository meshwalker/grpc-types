syntax = "proto3";

package reco;

// Interface exported by the server.
service Reco {
    rpc SetupCluster(SetupClusterRequest) returns (SetupClusterReesponse) {}
    rpc AddNode(AddNodeRequest) returns (StatusMsg) {}
    // rpc BroadcastIP(MemberListUpdateRequest) returns (StatusMsg) {}
    rpc Status(Empty) returns (ClusterStatusResponse) {}
}

message Empty {}

message SetupClusterRequest {
     string otp = 1;    // one time password generated by the trusted service provider
}

message SetupClusterReesponse {
     string status = 1;
    ErrorMsg errors = 2;
}

message StatusMsg {
     string status = 1;     // success or error
    string msg = 2;                 // undefined if status = error
    ErrorMsg errors = 3;             // undefined if status = success
}

message RegisterAdminRequest {
     string username = 1;
     string password = 2;
     string first_name = 3;
     string last_name = 4;
     string phone_number = 5;
}

message ClusterStatusResponse {
     bool status = 1;       // false = not part of a cluster, true = part of a cluster
    string cluster_name = 2;        // undefined if status = false
    map<string, string> tsp = 3;    // undefined if status = false
    bool internet_con = 4;          // undefined if status = false
    string external_ip = 5;         // If no internet connection is found, this field is empty; Undefined if status = false
    int32 num_users = 6;                // undefined if status = false
    map<string, string> members = 7;    // undefined if status = false
}

message AddNodeRequest {
     string otp = 1;         // One time password generated by the master node
     string master_ip = 2;    // IP address of the master node
}

message MemberListUpdateRequest {
     string old_ip = 1;
     string new_ip = 2;
}

message ErrorMsg {
    repeated string msg = 1;
}

// repeated string permissions = 8 [packed=true];

